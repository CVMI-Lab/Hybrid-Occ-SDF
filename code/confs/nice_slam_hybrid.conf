train{
    expname = apartment_mlp_hybrid
    dataset_class = datasets.scene_dataset.SceneDatasetDN
    model_class = model.network.MonoSDFNetwork
    loss_class = model.loss.MonoSDFLoss
    learning_rate = 5.0e-4
    lr_factor_for_grid = 20.0
    num_pixels = 1024
    checkpoint_freq = 10
    plot_freq = 10
    split_n_pixels = 1024
}
plot{
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [-1.1, 1.1]
}
loss{
    rgb_loss = torch.nn.L1Loss
    eikonal_weight = 0.05
    smooth_weight = 0.005
    depth_weight = 0.1
    normal_l1_weight = 0.05
    normal_cos_weight = 0.05
    rgb_occ_weight = 0.0
    depth_occ_weight = 1 
    normal_l1_occ_weight = 0.1
    normal_cos_occ_weight = 0.1
    decode_rgb_weight = 1
}
dataset{
    data_dir = Apartment
    img_res = [384, 384]
    scan_id = 1
    center_crop_type = no_crop
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 1.1

    Grid_MLP = True

    implicit_network
    {
        d_in = 3
        d_out = 2
        dims = [256, 256, 256, 256, 256, 256, 256, 256]
        geometric_init = True
        bias = 0.9
        skip_in = [4]
        weight_norm = True
        multires = 6
        inside_outside = True
        use_grid_feature = False
        divide_factor = 1.1
    }

    rendering_network
    {
        mode = idr 
        d_in = 9 
        d_out = 3
        dims = [ 256, 256]
        weight_norm = True
        multires_view = 4
        per_image_code = True
        color_encoder = True
        latent_active = None
        decode_active = "tanh"
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_min = 0.0001
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64 
        N_samples_eval = 128 
        N_samples_extra = 32 
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
    }
}
