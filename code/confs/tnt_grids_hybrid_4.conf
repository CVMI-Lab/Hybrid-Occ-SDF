train{
    expname = tnt_grids_occ_depth_10_normal_1_none_tanh_decode_1_color_0
    dataset_class = datasets.scene_dataset.SceneDatasetDN
    model_class = model.network.MonoSDFNetwork
    loss_class = model.loss.MonoSDFLoss
    learning_rate = 5.0e-4
    lr_factor_for_grid = 20.0
    num_pixels = 1024
    checkpoint_freq = 20
    plot_freq = 10
    split_n_pixels = 1024
}
plot{
    plot_nimgs = 1
    resolution = 1024
    grid_boundary = [-2.5, 2.5]
}
loss{
    rgb_loss = torch.nn.L1Loss
    eikonal_weight = 0.1
    smooth_weight = 0.005
    depth_weight = 0.05
    normal_l1_weight = 0.01
    normal_cos_weight = 0.01
    rgb_occ_weight = 0
    depth_occ_weight = 1 
    normal_l1_occ_weight = 0.1
    normal_cos_occ_weight = 0.1
    decode_rgb_weight = 1
}
dataset{
    data_dir = tnt_advanced
    img_res = [384, 384]
    scan_id = 4
    center_crop_type = center_crop_for_tnt
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 2.5       # [-1.51032746, -0.24393505, -1.54441321] [0.72357351, 0.48922399, 2.0567174]

    Grid_MLP = True

    implicit_network
    {
        d_in = 3
        d_out = 2
        dims = [ 256, 256]
        geometric_init = True
        bias = 1.0
        skip_in = [4]
        weight_norm = True
        multires = 7
        sphere_scale= 10.0
        inside_outside = True
        use_grid_feature = True
        divide_factor = 2.5 
    }
    rendering_network
    {
        mode = idr
        d_in = 9
        d_out = 3
        dims = [ 256, 256]
        weight_norm = True
        multires_view = 4
        per_image_code = True
        color_encoder = True
        latent_active = None
        decode_active = "tanh"
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_min = 0.0001
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64
        N_samples_eval = 256
        N_samples_extra = 32
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
    }
}